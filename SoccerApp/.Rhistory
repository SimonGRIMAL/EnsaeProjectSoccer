test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test1, '</span></div>')
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test1[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x
)
})
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; background-color: red; position:absolute; top: 0; left: 0; padding:5px;">
<span>75</span></div>'
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x
)
})
shinyApp(ui = ui, server = server)
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; position:absolute; top: 0; left: 0; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; position:absolute; top: 0; left: 0; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; background-color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x
)
})
shinyApp(ui = ui, server = server)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; position:absolute; top: 0; left: 0; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; position:absolute; top: 0; left: 0; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; padding:5px;">
<span>75</span></div>'
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
tags$head(tags$style("#tt td{
position:relative;
};
"))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; z-index: 0; color: red; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; strong; z-index: 0; color: red; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
test <- data.frame(test1 = c(1:3), test2 = c(4:6))
test[test$test1 == 1, "test1"] <- '<div style="width: 100%; height: 100%; font-weight: bold; z-index: 0; color: red; padding:5px;">
<span>75</span></div>'
test[test$test1 == 2, "test2"] <- '<div style="width: 100%; height: 100%; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>fgfvqfv</span></div>'
test[test$test1 == 3, "test2"] <- paste('<div style="width: 100%; height: 100%; z-index: 0; color: blue; position:absolute; top: 0; left: 0; padding:5px;">
<span>', test$test2[3], '</span></div>')
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
ui <- shinyUI(fluidPage(
tableOutput("tt"),
#  tags$head(tags$style("#tt td{
#                       position:relative;
#                       };
#                       "))
)
)
server <- shinyServer(function(input, output) {
output$tt <- renderTable({
test
}
,
sanitize.text.function = function(x) x,striped = TRUE #, colnames = FALSE
)
})
shinyApp(ui = ui, server = server)
setwd("C:/Users/admin/Desktop/Certificat Datascientist/PROJET/EnsaeProjectSoccer/SoccerApp")
shiny::runApp()
mef_attributes_team
mef_attributes_team <- function() {
home_team_g <- filter(Team_home_viz,team_long_name==input$ChoixEquipeMaison)
home<-mef_attributes_team (home_team_g,"home")
away_team_g <- filter(Team_away_viz,team_long_name==input$ChoixEquipeExterieur)
away <- mef_attributes_team (away_team_g,"away")
mix<- home %>% left_join (away)
for(i in 1:9) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
}
extract_attributes_team <- function (nom_table,where_team){
t_nom_table<-as.data.frame(t(nom_table [,51:59]))
t_nom_table$v<-rownames(t_nom_table)
colnames(t_nom_table) <- c(paste("val",where_team,sep='_'),"var")
t_nom_table<-t_nom_table[,c(2,1)]
return(t_nom_table)
}
mef_attributes_team <- function() {
home_team_g <- filter(Team_home_viz,team_long_name==input$ChoixEquipeMaison)
home<-extract_attributes_team (home_team_g,"home")
away_team_g <- filter(Team_away_viz,team_long_name==input$ChoixEquipeExterieur)
away <- extract_attributes_team (away_team_g,"away")
mix<- home %>% left_join (away)
for(i in 1:9) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
}
extract_attributes_team <- function (nom_table,where_team){
t_nom_table<-as.data.frame(t(nom_table [,51:59]))
t_nom_table$v<-rownames(t_nom_table)
colnames(t_nom_table) <- c(paste("val",where_team,sep='_'),"var")
t_nom_table<-t_nom_table[,c(2,1)]
return(t_nom_table)
}
runApp()
runApp()
mef_attributes_team <- function() {
home_team_g <- filter(Team_home_viz,team_long_name==input$ChoixEquipeMaison)
home<-extract_attributes_team (home_team_g,"home")
away_team_g <- filter(Team_away_viz,team_long_name==input$ChoixEquipeExterieur)
away <- extract_attributes_team (away_team_g,"away")
mix<- home %>% left_join (away)
for(i in 1:9) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
return(mix)
}
extract_attributes_team <- function (nom_table,where_team){
t_nom_table<-as.data.frame(t(nom_table [,51:59]))
t_nom_table$v<-rownames(t_nom_table)
colnames(t_nom_table) <- c(paste("val",where_team,sep='_'),"var")
t_nom_table<-t_nom_table[,c(2,1)]
return(t_nom_table)
}
runApp()
runApp()
load("data/Team_home_viz.RData")
load("data/Team_away_viz.RData")
runApp()
runApp()
mef_attributes_team <- function(n) {
home_team_g <- filter(Team_home_viz,team_long_name==input$ChoixEquipeMaison)
home<-extract_attributes_team (home_team_g,"home")
away_team_g <- filter(Team_away_viz,team_long_name==input$ChoixEquipeExterieur)
away <- extract_attributes_team (away_team_g,"away")
mix<- home %>% left_join (away)
for(i in 1:n) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
return(mix)
}
runApp()
runApp()
mef_attributes_team <- function(home,away) {
mix<- home %>% left_join (away)
for(i in 1:n) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
return(mix)
}
runApp()
runApp()
mef_attributes_team <- function(home,away) {
mix<- home %>% left_join (away)
for(i in 1:9) {
if (mix[i,2]> mix[i,3]) {
mix[i,2]<-paste('<div style="color: blue; font-weight: bold; position:absolute"> <span>',mix[i,2], '</span></div>')
}
else {
mix[i,3]<-paste('<div style="color: red; font-weight: bold; position:absolute"> <span>',mix[i,3], '</span></div>')
}
}
return(mix)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
test_m <- filter_match(Match_Shiny,"Paris Saint-Germain","FC Nantes")
load("data/Match_Shiny.Rdata")
test_m <- filter_match(Match_Shiny,"Paris Saint-Germain","FC Nantes")
View(test_m)
View(test_m)
test_m2<- test_m[,c(67:89)]
View(test_m2)
View(test_m2)
test_m2<- test_m[,c(45:67)]
View(test_m2)
View(test_m2)
test_m2<- test_m[,c(:67:89)]
View(test_m2)
View(test_m2)
test_m2<- test_m[,c(:78:100)]
test_m2<- test_m[,c(78:100)]
View(test_m2)
View(test_m2)
test_m3<- test_m[,c(69:100)]
View(test_m3)
View(test_m3)
test_m2<- test_m[,c(67:100)]
View(test_m3)
View(test_m3)
test_m2<- test_m[,c(67:80)]
View(test_m2)
View(test_m2)
test_m2<- test_m[,c(56:78)]
View(test_m2)
View(test_m2)
test_m2<- test_m[,c(56:77)]
View(test_m2)
View(test_m2)
View(test_m2)
View(test_m2)
Player <- dbReadTable(db,"Player")
Player_Attributes <- dbReadTable(db,"Player_Attributes")
